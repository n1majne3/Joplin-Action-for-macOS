name: build_arm64

# on: [push, pull_request]
on:  
  #push:
   # tags:
    #  - 'v*.*.*'  
  workflow_dispatch:
  
jobs:
  build:
    runs-on: macos-latest
    steps:
    
    - uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - uses: actions/checkout@v3
      with: 
        repository: laurent22/joplin        
        ref: dev
        path: joplin      
        
    - name: Set npm config flags
      run: |
        corepack enable
                
    - name: modify the traget
      run: |
        # sed -i '' 's/\"target\": \"dmg\",/\"target\": \{\"target\": \"dmg\",\"arch\": \[\"x64\",\"arm64\", \"universal\"]},/g' joplin/packages/app-desktop/package.json
                
        echo PYTHON_PATH=$(which python) >> $GITHUB_ENV
        
        tag=$(cat joplin/packages/app-desktop/package.json|grep \"version\"|awk  '{print $2}'|sed 's/"//g'|sed 's/,//g')
        echo "TAG=v$tag" >> $GITHUB_ENV
             
    - name: Initializate environment
      run: |      
        brew install vips
        node --version

    - name: Build & pack
      run: |
        export npm_config_arch=arm64
        export npm_config_target_arch=arm64
        yarn install
        cd joplin/packages/app-desktop        
        npm pkg set 'build.mac.target.target'='default'
        npm pkg set 'build.mac.target.arch[0]'='arm64'         
        yarn run dist --publish=never --mac --arm64
        echo "DIST=$PWD/dist" >> $GITHUB_ENV              
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1      
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}     
        files: |
          ${{ env.DIST }}/*.dmg
          

    
