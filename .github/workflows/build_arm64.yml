name: build_arm64

# on: [push, pull_request]
on:  
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
  

env:
  REPO_URL: https://github.com/laurent22/joplin
  REPO_BRANCH: dev

jobs:
  build:
    runs-on: macos-latest
    steps:
    
    - uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - uses: actions/checkout@v2
        
    - name: Set npm config flags
      run: |
        corepack enable
        # export npm_config_arch=arm64
        # export npm_target_arch=arm64
        # export sdkroot=macosx
        # npm config set python python3
        
    - name: Clone source code      
      run: |        
        git clone $REPO_URL -b $REPO_BRANCH joplin   
        
    - name: modify the traget
      run: |
        # sed -i '' 's/\"target\": \"dmg\",/\"target\": \{\"target\": \"default\",\"arch\": \[\"x64\",\"arm64\", \"universal\"]},/g' joplin/packages/app-desktop/package.json
        # sed -i '' 's/"electron-builder": "22.11.7"/"electron-builder": "23.0.6"/g' joplin/packages/app-desktop/package.json
        # echo YARN_ENABLE_IMMUTABLE_INSTALLS=false >> $GITHUB_ENV
        # sed -i '' 's/electron-builder: 22.11.7/electron-builder: 22.14.13/g' joplin/yarn.lock
        
        echo PYTHON_PATH=$(which python) >> $GITHUB_ENV
        
        tag=$(cat joplin/packages/app-desktop/package.json|grep \"version\"|awk  '{print $2}'|sed 's/"//g'|sed 's/,//g')
        echo "TAG=v$tag" >> $GITHUB_ENV
             
    - name: Initializate environment
      run: |      
        brew install vips
        node --version

    - name: Build & pack
      run: |
        cd joplin        
        yarn install        
        cd packages/app-desktop
        yarn run dist --publish=never --mac --arm64
        # yarn run dist --publish=never 
        # yarn run dist --publish=never -mwl
        echo "DIST=$PWD/dist" >> $GITHUB_ENV              
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1      
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}     
        files: |
          ${{ env.DIST }}/*.dmg
          ${{ env.DIST }}/*.AppImage

    
